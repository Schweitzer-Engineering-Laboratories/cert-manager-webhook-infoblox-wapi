// cSpell:disable
{
  // User defined settings
  "containerEnv": {
    "ZSH_THEME": "${localEnv:ZSH_THEME}",
    "KUBE_EDITOR": "nano",
    "TERM": "xterm-256color",
    "NODE_EXTRA_CA_CERTS": "/etc/pki/ca-trust/source/anchors/zscaler.crt",
    // Used to set the hosts project path for use in scripts running inside a docker container inside the dev contianer
    "HOST_PROJECT_PATH": "${localWorkspaceFolder}", // Exaple Output: /home/davesarg-sa/src/kairos-rocky-rke2
    "WORKSPACE_FOLDER": "${containerWorkspaceFolder}", // Example Output: /workspaces/kairos-rocky-rke2
    "TZ": "America/Los_Angeles" // Set the timezone in the devcontainer
  },
  "image": "devops-docker-prod.artifactory.metro.ad.selinc.com/sysinfra-dev:latest",
  // Fixed settings
  "name": "cert-manager-webhook-infoblox",
  //"postCreateCommand": "~/.windows.sh && go mod download && go mod tidy",
  "postStartCommand": [
    ".devcontainer/post_start_command.sh"
  ],
  //"dockerComposeFile": "docker-compose.yml",
  "overrideCommand": true,
  //"service": "vscode",
  "workspaceFolder": "/workspace",
  "mounts": [
    "source=cert-manager-webhook-infoblox-bashhistory,target=/commandhistory,type=volume",
    "source=cert-manager-webhook-infoblox-plugins,target=/home/vscode/.vscode-server/extensions,type=volume",
    // repositories you need access to in the dev container.  Logging into a repo inside the dev container will not stick.
    "source=${localEnv:HOME}/.docker,target=/home/vscode/.docker-localhost,type=bind",
    // If you will be working with Kubernetes you should have a configured kube config file in your .kube directory.
    "source=${localEnv:HOME}/.kube,target=/home/vscode/.kube-localhost,type=bind",
    "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh-localhost,type=bind",
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
  ],
  "customizations": {
    "vscode": {
      "extensions": [
        "GitHub.copilot", // Copilot
        "GitHub.copilot-chat", // Copilot inline chat.
        "darkriszty.markdown-table-prettify", // markdown table prettify
        "EditorConfig.EditorConfig", // Add support for editorConfig
        "euskadi31.json-pretty-printer", // json pretty print
        "Gruntfuggly.todo-tree", // TODO, FIXME, etc highlights and tree
        "huizhou.githd", // Git blame and some other git stuff
        "IronGeek.vscode-env", // For linux environment files
        "k--kato.docomment", // Code documentation
        "mhutchie.git-graph", // Git graph
        "ms-azuretools.vscode-docker", // Docker
        "redhat.vscode-yaml", // YAML
        "streetsidesoftware.code-spell-checker", // Spell checker
        "tim-koehler.helm-intellisense", // Helm
        "yzhang.markdown-all-in-one", // markdown preview and support
        "golang.go",
        "github.vscode-pull-request-github" // Github interaction
      ],
      "settings": {
        "dev.containers.dockerCredentialHelper": false,
        "files.eol": "\n",
        "go.buildTags": "",
        "go.toolsEnvVars": {
          "CGO_ENABLED": "0"
        },
        "go.useLanguageServer": true,
        "go.testEnvVars": {
          "CGO_ENABLED": "1"
        },
        "go.testFlags": [
          "-v",
          "-race"
        ],
        "go.testTimeout": "10s",
        "go.coverOnSingleTest": true,
        "go.coverOnSingleTestFile": true,
        "go.coverOnTestPackage": true,
        "go.lintTool": "golangci-lint",
        "go.lintOnSave": "package",
        "[go]": {
          "editor.codeActionsOnSave": {
            "source.organizeImports": "always"
          }
        },
        "gopls": {
          "usePlaceholders": false,
          "staticcheck": true,
          "formatting.gofumpt": true
        },
        "remote.extensionKind": {
          "ms-azuretools.vscode-docker": "workspace"
        },
        "cSpell": {
          "enabledLanguageIds": [
            "asciidoc",
            "c",
            "cpp",
            "csharp",
            "css",
            "dockerfile",
            "git-commit",
            "go",
            "graphql",
            "handlebars",
            "haskell",
            "html",
            "jade",
            "java",
            "javascript",
            "javascriptreact",
            "json",
            "jsonc",
            "latex",
            "less",
            "markdown",
            "php",
            "plaintext",
            "python",
            "pug",
            "restructuredtext",
            "rust",
            "shellscript",
            "scala",
            "scss",
            "text",
            "typescript",
            "typescriptreact",
            "yaml"
          ],
          "blockCheckingWhenAverageChunkSizeGreaterThan": 10000,
          "blockCheckingWhenLineLengthGreaterThan": 10000,
          "blockCheckingWhenTextChunkSizeGreaterThan": 10000,
          "allowCompoundWords": true
        },
        "editor.detectIndentation": false,
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.formatOnSave": true,
        "editor.renderWhitespace": "all",
        "editor.rulers": [
          120,
          180
        ],
        "[markdown]": {
          "editor.defaultFormatter": "darkriszty.markdown-table-prettify",
          "rewrap.autoWrap.enabled": false,
          "rewrap.wrappingColumn": 180
        },
        "markdownlint.config": {
          "MD030": false,
          "MD033": false,
          "MD024": {
            "siblings_only": true
          }
        },
        "markdown.extension.orderedList.autoRenumber": true,
        "markdown.extension.toc.levels": "2..6",
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/bin/zsh"
          }
        },
        "terminal.integrated.automationProfile.linux": {
          "path": "/bin/zsh"
        },
        "terminal.integrated.defaultProfile.linux": "zsh",
        "todo-tree.general.tags": [
          "TODO:",
          "NOTE:",
          "WOOF:",
          "WARNING:",
          "FIXME:"
        ],
        "todo-tree.highlights.customHighlight": {
          "TODO:": {
            "hideFromTree": false,
            "icon": "check",
            "background": "#00620a",
            "foreground": "#fff",
            "iconColour": "#00620a",
            "type": "whole-line",
            "gutterIcon": true
          },
          "NOTE:": {
            "hideFromTree": true,
            "icon": "note",
            "background": "#1422e1",
            "foreground": "#fff",
            "iconColour": "#1422e1",
            "type": "tag-and-comment",
            "gutterIcon": true
          },
          "WOOF:": {
            "hideFromTree": false,
            "icon": "squirrel",
            "background": "#ffbf00",
            "foreground": "#000",
            "iconColour": "#ffbf00",
            "type": "whole-line",
            "gutterIcon": true
          },
          "WARNING:": {
            "hideFromTree": true,
            "icon": "alert",
            "background": "#ff8716",
            "foreground": "#000",
            "iconColour": "#ff8716",
            "type": "tag-and-comment",
            "gutterIcon": true
          },
          "FIXME:": {
            "hideFromTree": false,
            "icon": "bug",
            "background": "#840000",
            "foreground": "#fff",
            "iconColour": "#e30000",
            "type": "whole-line",
            "gutterIcon": true
          }
        }
      }
    }
  }
}